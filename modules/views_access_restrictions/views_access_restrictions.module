<?php

function views_access_restrictions_views_post_execute(&$view) {
    global $user;

    if (in_array('administrator', array_values($user->roles))) {
        // Administrator can see everything, don't remove anything from the view.
        return;
    }

    switch ($view->name) {
        case 'community_by_dataset':
            _views_access_restrictions_filter_communities($view);
            break;
        case 'datasets':
        case 'studies_search':
            _views_access_restrictions_filter_community_content($view);
            break;
    }
}

function _views_access_restrictions_filter_community_content(&$view) {
    global $user;

    watchdog('views_access_restrictions', 'Running post execute filter_community_content '. $view->name, array(), WATCHDOG_DEBUG);

    $results = array();
    foreach ($view->result as $key => $value) {   
        // get id of node, if user has access, add item and continue
        $nid = $value->entity->nid;
        $node = node_load($nid);
       
        //Criteria 1 : if draft and not owner... first this criteria need to be checked.        
        if($node->status == "0" && $node->uid != $user->uid){
             continue;
        }

        // If we have access to the node, list it.
        if(node_access('view',$node)) {
            array_push($results, $value);
            continue;
        }

        // user has no access. We still show this item in the listing if it is not part of any hidden community.
        if(views_access_restrictions_is_hidden_project_content($nid)) {
            continue;        
        } else {
            //add element to final array
            array_push($results, $value);
        }
    }
    
    //rewrite the final results page
    $view->result = $results;
}

function _views_access_restrictions_filter_communities(&$view) {

    watchdog('views_access_restrictions', 'Running post search filter_communities on '. $view->name, array(), WATCHDOG_DEBUG);

    $results = array();
    foreach ($view->result as $key => $value) {
        // get id of community, if user has access, add item and continue
        $nid = $value->nid;
        $node = node_load($nid);
        if (og_is_member('node', $nid)) {
            array_push($results, $value);
            continue;
        }

        // is not member, only show community if field_project_visibity is not hidden
        if(property_exists($node, 'field_project_visibility') &&
          $node->field_project_visibility[LANGUAGE_NONE][0]['value'] == '0') {
            continue;
        } else {
            array_push($results, $value);
        }
    }

    //rewrite the final results page
    $view->result = $results;
}

/**
 * To check if a node belongs to a hidden community / project
 */
function views_access_restrictions_is_hidden_project_content($nid) {

    // get number of communities associated to the given node and count
    // the hidden ones
    $gids = og_get_entity_groups('node', $nid);

    if (sizeof($gids) > 0) {
        // get gids as keys
        $keys = array_keys(array_flip($gids['node']));

        // get complete entity of each group
        $groups = entity_load('node', $keys);

        foreach ($groups as $g) {
            if (!property_exists($g, 'field_project_visibility')) {
                continue;
            }

            $h = $g->field_project_visibility[LANGUAGE_NONE][0]['value'];

            // return true then project visibility is hidden
            if ($h=='0') {
                return TRUE;
            }
        }
    }

    return FALSE;
}
